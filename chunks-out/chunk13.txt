valid_ipv4emcc-analysis.txt
['CSV data for further analysis', ' valid_ipv4emcc.wasm,6536,136,8,5.5555553,73,8,4,5,1,4,1.6,1,40,9,22.5,9,22.5,7,17.5']

upper_triangular_matrixemcc-analysis.txt
['CSV data for further analysis', ' upper_triangular_matrixemcc.wasm,22165,400,10,2.4390244,111,9,5,5,1,6,2,1,69,17,24.637682,17,24.637682,15,21.73913']

orphan_processemcc-analysis.txt
['CSV data for further analysis', ' orphan_processemcc.wasm,5794,144,8,5.263158,77,8,4,5,1,4,1.6,1,40,9,22.5,9,22.5,7,17.5']

forkemcc-analysis.txt
['CSV data for further analysis', ' forkemcc.wasm,5456,123,8,6.10687,67,8,4,5,1,4,1.6,1,40,9,22.5,9,22.5,7,17.5']

floyd_triangleemcc-analysis.txt
['CSV data for further analysis', ' floyd_triangleemcc.wasm,21551,391,10,2.4937656,112,9,5,5,1,6,2,1,69,17,24.637682,17,24.637682,15,21.73913']

stack_overflowemcc-analysis.txt
['CSV data for further analysis', ' stack_overflowemcc.wasm,5838,125,9,6.716418,74,12,4,6,1,4,1.5,1,52,13,25,13,25,7,13.461538']

2dmatrixemcc-analysis.txt
['CSV data for further analysis', ' 2dmatrixemcc.wasm,5721,116,8,6.451613,65,8,4,5,1,4,1.6,1,40,9,22.5,9,22.5,7,17.5']

euclidianemcc-analysis.txt
['CSV data for further analysis', ' euclidianemcc.wasm,5566,116,8,6.451613,65,8,4,5,1,4,1.6,1,40,9,22.5,9,22.5,7,17.5']

sum_seriesemcc-analysis.txt
['CSV data for further analysis', ' sum_seriesemcc.wasm,21570,389,10,2.5062656,112,9,5,5,1,6,2,1,69,17,24.637682,17,24.637682,15,21.73913']

horner_methodemcc-analysis.txt
['CSV data for further analysis', ' horner_methodemcc.wasm,21654,393,10,2.4813895,111,9,5,5,1,6,2,1,69,17,24.637682,17,24.637682,15,21.73913']

zombie_processemcc-analysis.txt
['CSV data for further analysis', ' zombie_processemcc.wasm,756,45,3,6.25,43,6,4,3,1,1,1,1,10,4,40,4,40,4,40']

sum_serieswasi-analysis.txt
['CSV data for further analysis', ' sum_serieswasi.wasm,19726,248,15,5.703422,79,5,4,2,4,11,7.5,11,151,37,24.503311,37,24.503311,37,24.503311']

horner_methodwasi-analysis.txt
['CSV data for further analysis', ' horner_methodwasi.wasm,19810,252,15,5.6179776,78,5,4,2,4,11,7.5,11,151,37,24.503311,37,24.503311,37,24.503311']

euclidianwasi-analysis.txt
['CSV data for further analysis', ' euclidianwasi.wasm,7636,134,13,8.843537,50,4,3,2,4,9,6.5,9,89,22,24.7191,22,24.7191,22,24.7191']

upper_triangular_matrixwasi-analysis.txt
['CSV data for further analysis', ' upper_triangular_matrixwasi.wasm,20315,259,15,5.4744525,78,5,4,2,4,11,7.5,11,151,37,24.503311,37,24.503311,37,24.503311']

valid_ipv4wasi-analysis.txt
['CSV data for further analysis', ' valid_ipv4wasi.wasm,8696,150,13,7.97546,56,4,3,2,4,9,6.5,9,89,22,24.7191,22,24.7191,22,24.7191']

2dmatrixwasi-analysis.txt
['CSV data for further analysis', ' 2dmatrixwasi.wasm,7787,134,13,8.843537,50,4,3,2,4,9,6.5,9,89,22,24.7191,22,24.7191,22,24.7191']

floyd_trianglewasi-analysis.txt
['CSV data for further analysis', ' floyd_trianglewasi.wasm,19708,250,15,5.6603775,79,5,4,2,4,11,7.5,11,151,37,24.503311,37,24.503311,37,24.503311']

stack_overflowwasi-analysis.txt
['CSV data for further analysis', ' stack_overflowwasi.wasm,12280,167,14,7.7348065,68,8,3,3,1,9,4.666666666666667,4,99,26,26.262627,26,26.262627,22,22.222221']

floyd_trianglellvm-analysis.txt
['CSV data for further analysis', ' floyd_trianglellvm.wasm,25074,561,13,2.2648084,110,5,4,2,3,10,6.5,10,123,33,26.829268,33,26.829268,33,26.829268']

horner_methodllvm-analysis.txt
['CSV data for further analysis', ' horner_methodllvm.wasm,25174,563,13,2.2569444,109,5,4,2,3,10,6.5,10,123,33,26.829268,33,26.829268,33,26.829268']

sum_seriesllvm-analysis.txt
['CSV data for further analysis', ' sum_seriesllvm.wasm,25092,559,13,2.2727273,110,5,4,2,3,10,6.5,10,123,33,26.829268,33,26.829268,33,26.829268']

upper_triangular_matrixllvm-analysis.txt
['CSV data for further analysis', ' upper_triangular_matrixllvm.wasm,25716,570,13,2.2298455,109,5,4,2,3,10,6.5,10,123,33,26.829268,33,26.829268,33,26.829268']

2dmatrixllvm-analysis.txt
['CSV data for further analysis', ' 2dmatrixllvm.wasm,12281,202,11,5.164319,60,4,3,2,3,8,5.5,8,67,19,28.35821,19,28.35821,19,28.35821']

tic_tac_toellvm-analysis.txt
['CSV data for further analysis', ' tic_tac_toellvm.wasm,29220,707,18,2.4827585,151,9,5,2,5,13,9,13,265,57,21.509434,57,21.509434,57,21.509434']

euclidianllvm-analysis.txt
['CSV data for further analysis', ' euclidianllvm.wasm,12136,202,11,5.164319,59,4,3,2,3,8,5.5,8,67,19,28.35821,19,28.35821,19,28.35821']

orphan_processllvm-analysis.txt
['CSV data for further analysis', ' orphan_processllvm.wasm,12227,231,11,4.5454545,72,4,3,2,3,8,5.5,8,67,19,28.35821,19,28.35821,19,28.35821']

valid_ipv4llvm-analysis.txt
['CSV data for further analysis', ' valid_ipv4llvm.wasm,13209,219,11,4.7826085,66,4,3,2,3,8,5.5,8,67,19,28.35821,19,28.35821,19,28.35821']

forkllvm-analysis.txt
['CSV data for further analysis', ' forkllvm.wasm,12090,219,11,4.7826085,67,4,3,2,3,8,5.5,8,67,19,28.35821,19,28.35821,19,28.35821']

stack_overflowllvm-analysis.txt
['CSV data for further analysis', ' stack_overflowllvm.wasm,12336,206,12,5.504587,65,8,3,3,1,8,4,3,74,23,31.081081,23,31.081081,19,25.675676']

zombie_processllvm-analysis.txt
['CSV data for further analysis', ' zombie_processllvm.wasm,279,26,1,3.7037036,21,0,0,1,1,1,1,1,3,0,0,0,0,0,0']

upper_triangular_matrixcheerp-analysis.txt
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32, i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' Some(12), end idx', ' Some(12)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' Some(0), end idx', ' Some(0)']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 2']
['  class #6']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' Some(5), end idx', ' Some(5)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #7']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 6']
['  class #8']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 6']
['  class #9']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 7']
['  class #10']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 8']
['  total classes', ' 11']

valid_ipv4cheerp-analysis.txt
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' Some(0), end idx', ' Some(0)']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' Some(8), end idx', ' Some(8)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 2']
['  class #3']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' Some(6), end idx', ' Some(6)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #6']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 6']
['  total classes', ' 7']

tic_tac_toecheerp-analysis.txt
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32, i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' Some(12), end idx', ' Some(12)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' Some(0), end idx', ' Some(0)']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 2']
['  class #6']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' Some(4), end idx', ' Some(4)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #7']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 6']
['  class #8']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 6']
['  class #9']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 7']
['  class #10']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 8']
['  total classes', ' 11']

forkcheerp-analysis.txt
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' Some(0), end idx', ' Some(0)']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' Some(8), end idx', ' Some(8)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 2']
['  class #3']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 5']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' Some(7), end idx', ' Some(7)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #6']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 6']
['  total classes', ' 7']

zombie_processcheerp-analysis.txt
['']

orphan_processcheerp-analysis.txt
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' Some(0), end idx', ' Some(0)']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' Some(9), end idx', ' Some(9)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 2']
['  class #3']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 5']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' Some(7), end idx', ' Some(7)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #6']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 6']
['  total classes', ' 7']

euclidiancheerp-analysis.txt
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' Some(0), end idx', ' Some(0)']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' Some(10), end idx', ' Some(10)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 2']
['  class #3']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' Some(7), end idx', ' Some(7)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #6']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 6']
['  total classes', ' 7']

sum_seriescheerp-analysis.txt
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32, i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' Some(13), end idx', ' Some(13)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' Some(5), end idx', ' Some(5)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #7']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 7']
['  class #8']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 8']
['  class #9']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 25']
['  total classes', ' 10']

floyd_trianglecheerp-analysis.txt
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32, i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' Some(12), end idx', ' Some(12)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' Some(0), end idx', ' Some(0)']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 2']
['  class #6']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 3']
['  class #7']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' Some(5), end idx', ' Some(5)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #8']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 6']
['  class #9']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 7']
['  class #10']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 8']
['  total classes', ' 11']

stack_overflowcheerp-analysis.txt
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' Some(0), end idx', ' Some(0)']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' Some(11), end idx', ' Some(11)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  class #6']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' Some(10), end idx', ' Some(10)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #7']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 6']
['  total classes', ' 8']

2dmatrixcheerp-analysis.txt
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' Some(0), end idx', ' Some(0)']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' Some(8), end idx', ' Some(8)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 2']
['  class #3']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 5']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' Some(7), end idx', ' Some(7)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #6']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 6']
['  total classes', ' 7']

horner_methodcheerp-analysis.txt
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32, i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' Some(12), end idx', ' Some(12)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' Some(5), end idx', ' Some(5)']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #6']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 6']
['  class #7']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 7']
['  class #8']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 8']
['  class #9']
['    type', ' [i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 25']
['  total classes', ' 10']

