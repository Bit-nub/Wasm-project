Input file: temp1wasi.wasm
  binary:    temp1wasi.wasm

Functions:           68
  Imported:           7
  Non-imported:      61
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          8
  Of those, unique functions:     8 (i.e., at least 11.76% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     12280
  call:             167 (1.36% of all instructions)
  call_indirect:     14 (0.11% of all instructions, 7.73% of all calls)

Globals:
  #0 i32
     init: i32.const 70880
     16 × global.get   28 × global.set   44 total (36/64% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     16 (26.23% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.64%) × [-880]
    1  (1.64%) × [-256]
    1  (1.64%) × [-208]
    1  (1.64%) × [-32]
    6  (9.84%) × [-16]
   51 (83.61%) × []
  functions with stack allocation total: 10 (16.39%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"temp1wasi.wasm",1,1.6393442,"[-880]",-880,880
sp_csv_line:"temp1wasi.wasm",1,1.6393442,"[-256]",-256,256
sp_csv_line:"temp1wasi.wasm",1,1.6393442,"[-208]",-208,208
sp_csv_line:"temp1wasi.wasm",1,1.6393442,"[-32]",-32,32
sp_csv_line:"temp1wasi.wasm",6,9.836065,"[-16]",-16,16
sp_csv_line:"temp1wasi.wasm",51,83.60656,"[]",0,0

Counts of function types (13 unique types):
    1  (1.47%) × [i32, i32, i32] -> []
    1  (1.47%) × [i32, i32, i32, i32, i32] -> []
    1  (1.47%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.47%) × [f64, i32] -> [f64]
    2  (2.94%) × [i32, i64, i32] -> [i64]
    2  (2.94%) × [i32, i64, i32, i32] -> [i32]
    3  (4.41%) × [] -> [i32]
    3  (4.41%) × [i32, i32, i32, i32] -> [i32]
    8 (11.76%) × [] -> []
    9 (13.24%) × [i32, i32, i32] -> [i32]
   10 (14.71%) × [i32] -> []
   11 (16.18%) × [i32] -> [i32]
   16 (23.53%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 5 (8.20% of all functions)

Table elements initialization:
         range: [    1,    4]   length:   4   unique funcs:    4   type: [i32] -> []
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    6,    6]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    7,    7]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    8,    8]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  5 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source: local.(get|tee)   type [i32] -> []
         functions matching by type (regardless whether they are in the table):               10
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     9 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                9
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> []
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 9
  total classes: 3

CSV data for further analysis: temp1wasi.wasm,12280,167,14,7.7348065,68,8,3,3,1,9,4.666666666666667,4,99,26,26.262627,26,26.262627,22,22.222221

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"temp1wasi.wasm",0,4,1,"local.(get|tee)"
"temp1wasi.wasm",1,1,4,"i32.load"
"temp1wasi.wasm",2,2,9,"i32.load"
